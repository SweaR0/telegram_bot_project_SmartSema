# –∏–º–ø–æ—Ä—Ç –Ω—É–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
import dotenv
import os
import converter
import models
import telebot
from telebot import types
import wikipedia as wiki
from random import randint, choice
import json
from io import BytesIO
from PIL import Image

BOT_TOKEN = converter.BOT_TOKEN  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = telebot.TeleBot(BOT_TOKEN)  # —Å–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—É—é –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –±–æ—Ç—É

with open('data_mode.json', 'r') as dm_js:  # —Å—á–∏—Ç—ã–≤–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ä–µ–∂–∏–º–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    data = json.load(dm_js)

# —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç
list_of_supported_currencies = ['USD', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM',
                                'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN',
                                'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLF', 'CLP', 'CNH', 'CNY', 'COP', 'CRC',
                                'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR',
                                'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD',
                                'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'ISK', 'JEP',
                                'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT',
                                'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',
                                'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',
                                'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON',
                                'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS',
                                'SRD', 'SSP', 'STD', 'STN', 'SVC', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP',
                                'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'UYU', 'UZS', 'VES', 'VND', 'VUV', 'WST',
                                'XAF', 'XAG', 'XAU', 'XCD', 'XDR', 'XOF', 'XPD', 'XPF', 'XPT', 'YER', 'ZAR', 'ZMW',
                                'ZWL']

# —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∂–∏–º–æ–≤ –∞–¥–º–∏–Ω–∞
check_admins_mode = ['–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞', '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ id', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ firstname',
                     '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∂–∏–º–æ–≤', '–°–∞–º–∞—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∏–≥—Ä–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                     '–†–µ–∫–æ—Ä–¥—Å–º–µ–Ω—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ä–µ–∂–∏–º–æ–≤', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö']


@bot.message_handler(commands=['start'])
def start(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω—É–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    '''
    global data
    if str(message.chat.id) not in data:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª 1 —Ä–∞–∑, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤—Ä—å data
        data[str(message.chat.id)] = {'mode': '',
                                      'pod_mode': '',
                                      'list_for_game_random_number': [],
                                      'list_for_game_random_word': [],
                                      'game_function_check': '',
                                      'wikipedia_assistant': '',
                                      'results_request': [],
                                      'original': 'RUB',
                                      'necessary': 'USD',
                                      'admins_mode': '',
                                      'admins_pod_mode': ''
                                      }
        with open('data_mode.json', 'w') as dm_jss:  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –≤ json —Ñ–∞–π–ª
            json.dump(data, dm_jss)

        with models.db:  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            inf = {}
            path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π id –∏ —É–≤–µ–ª–∏—á–≤–∞–µ–º –µ–≥–æ –Ω–∞ 1
            if os.path.exists(path):
                dotenv.load_dotenv(path)
                id = int(os.environ.get('id')) + 1

            dotenv_file = dotenv.find_dotenv()  # –º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ id –≤ .env
            dotenv.load_dotenv(dotenv_file)
            os.environ["id"] = str(id)
            dotenv.set_key(dotenv_file, "id", os.environ["id"])

            inf['id'] = str(id)
            inf['chat_id'] = message.chat.id
            inf['first_name'] = str(message.from_user.first_name)
            inf['last_name'] = str(message.from_user.last_name)
            inf['username'] = str(message.from_user.username)
            inf['wikipedia'] = '0'
            inf['calculator'] = '0'
            inf['currency_converter'] = '0'
            inf['black_white_photo'] = '0'
            inf['game'] = '0'
            inf['random_number'] = '0'
            inf['random_word'] = '0'
            inf['game_dice'] = '0'
            inf['basketball'] = '0'
            inf['football'] = '0'
            inf['bowling'] = '0'
            inf['darts'] = '0'
            inf['slot_machine'] = '0'
            models.Userinf.insert_many([inf]).execute()  # –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–¥

    out_mess = f'<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</b>\n' + '–ú–µ–Ω—è –∑–æ–≤—É—Ç –°—ë–º–∞üòú\n' +\
               '–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–æ–∏—Ö —Ä–µ–∂–∏–º–æ–≤, –Ω–∞–∂–∏–º–∞–π –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏, –∞ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, '\
               + '—Ç–æ –Ω–∞–ø–∏—à–∏ "/help", –∏ —è –≤—ã–≤–µ–¥—É –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é üòâ'

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    btn_calculator = types.KeyboardButton('üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    btn_game = types.KeyboardButton('üèÜ–ò–≥—Ä—ãüèÜ')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä
    btn_wikipedia = types.KeyboardButton('üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏
    black_white_photo = types.KeyboardButton('üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ —á—ë—Ä–Ω–æ –±–µ–ª—ã—Ö —Ñ–æ—Ç–æ
    currency_converter = types.KeyboardButton('üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
    # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    markup.add(btn_wikipedia, btn_calculator, currency_converter, black_white_photo, btn_game)
    bot.send_message(message.chat.id, out_mess, reply_markup=markup, parse_mode='html')  # –≤—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è


@bot.message_handler(commands=['help'])
def hint_output(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞
    '''
    bot.send_message(message.chat.id, '–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ –Ω—É–∂–Ω–æ –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏! üôÇ\n\n' +
                     '–í —Ä–µ–∂–∏–º–µ "üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè" —è –≤—ã–¥–∞–º –≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É —Å ' +
                     '—Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ ü•∏\n\n' + '–í —Ä–µ–∂–∏–º–µ "üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üìü" —è –ø–æ—Å—á–∏—Ç–∞—é –≤–∞—à–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ'+
                     ' –≤—ã—Ä–∞–∂–µ–Ω–∏–µ ü§ì\n\n' + '–í —Ä–µ–∂–∏–º–µ "üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂" —è –ø–µ—Ä–µ–≤–µ–¥—É –∑–∞–¥–∞–Ω–Ω—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥ ' +
                     '–≤ –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç—É ü§ë\n\n' + '–í —Ä–µ–∂–∏–º–µ "üñ§–ß–µ—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç" —è –≤–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–¥–µ–ª–∞—é' +
                     ' —á—ë—Ä–Ω–æ-–±–µ–ª–æ–π üòù\n\n' + '–í —Ä–µ–∂–∏–º–µ "üèÜ–ò–≥—Ä—ãüèÜ" —è –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–∏–∫–µ—Ä—ã, –≤—ã–±–∏—Ä–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ' +
                     ' –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∏ –≤—ã–±–∏—Ä–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤ ü§™\n\n' +
                     '–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∂–∏–º–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Å–∞–º–æ–º —Ä–µ–∂–∏–º–µ,' +
                     ' –ø–æ—ç—Ç–æ–º—É –∑–∞—Ö–æ–¥–∏—Ç–µ –∏ –ø—Ä–æ–±—É–π—Ç–µ, —É –≤–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è! üòâ')


@bot.message_handler(commands=['exit'])
def return_request_input(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–Ω–æ–≤–æ –≤ —Ä–µ–∂–∏–º–µ –≤–∏–∫–∏–ø–µ–¥–∏–∏
    '''
    global data
    if data[f'{message.chat.id}']['mode'] == 'üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè':
        data[f'{message.chat.id}']['wikipedia_assistant'] = '–∑–∞–ø—Ä–æ—Å'
        data[f'{message.chat.id}']['results_request'] = []
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å üôÉ')
    else:
        bot.send_message(message.chat.id, '–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ –≤–∏–∫–∏–ø–µ–¥–∏–∏ üôÉ')


@bot.message_handler(commands=['currencies'])
def list_of_currencies(message):
    global list_of_supported_currencies, data
    if data[f'{message.chat.id}']['mode'] == 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂':  # –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö—Å—è –≤–∞–ª—é—Ç
        bot.send_message(message.chat.id, f'‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã: {", ".join(list_of_supported_currencies)}')
    else:
        bot.send_message(message.chat.id, '‚ùó–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ "üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂"‚ùó')


@bot.message_handler(commands=['!enable!admin!mode!'])
def enable_admin_mode(message):
    global data
    try:
        path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—É–¥–∞ –Ω–æ–≤–æ–≥–æ
        if os.path.exists(path):
            dotenv.load_dotenv(path)
            admins_list = os.environ.get('admins_list')
    except BaseException:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')
    if str(message.chat.id) in admins_list:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
        if data[f'{message.chat.id}']['admins_mode'] == 'on':
            data[f'{message.chat.id}']['admins_mode'] = ''
            data[f'{message.chat.id}']['admins_pod_mode'] = ''

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
            btn_calculator = types.KeyboardButton('üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
            btn_game = types.KeyboardButton('üèÜ–ò–≥—Ä—ãüèÜ')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä
            btn_wikipedia = types.KeyboardButton('üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏
            black_white_photo = types.KeyboardButton('üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ —á—ë—Ä–Ω–æ –±–µ–ª—ã—Ö —Ñ–æ—Ç–æ
            currency_converter = types.KeyboardButton('üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂')  # –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç

            # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
            markup.add(btn_wikipedia, btn_calculator, currency_converter, black_white_photo, btn_game)

            out_mes = f'<b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b> {message.from_user.first_name}, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è!'
            bot.send_message(message.chat.id, out_mes, reply_markup=markup, parse_mode='html')

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤
            add_admin = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞')
            del_admin = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞')
            st_id = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ id')
            st_chat_id = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Ç id')
            st_firstname = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ firstname')
            st_pr_mode = types.KeyboardButton('–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∂–∏–º–æ–≤')
            othen_game_use = types.KeyboardButton('–°–∞–º–∞—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∏–≥—Ä–∞')
            count_users = types.KeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
            records_users = types.KeyboardButton('–†–µ–∫–æ—Ä–¥—Å–º–µ–Ω—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ä–µ–∂–∏–º–æ–≤')
            inf_about_admins = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö')

            # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
            markup.add(st_id, count_users, st_chat_id, st_pr_mode, st_firstname, othen_game_use,
                       inf_about_admins, records_users, add_admin, del_admin)

            data[f'{message.chat.id}']['admins_mode'] = 'on'
            out_mes = f'<b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b> {message.from_user.first_name}, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!'
            bot.send_message(message.chat.id, out_mes, parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['photo'])
def sending_black_white_photo(photo):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    '''
    global data
    if data[f'{photo.chat.id}']['mode'] == 'üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç':  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞
        try:
            photo_file = bot.get_file(photo.photo[-1].file_id)  # –¥–æ—Å—Ç–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É
            photo_bytes = bot.download_file(photo_file.file_path)
            flow = BytesIO(photo_bytes)
            image = Image.open(flow).convert("RGB")  # —Å–æ–∑–¥–∞—ë–º PIL.Image –æ–±—ä–µ–∫—Ç –∏–∑  photo_bytes
            flow.close()
            bl_wi_image = black_white_photo(image)  # –ø–æ–ª—É—á–∞–µ–º —á—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æ
            bot.send_photo(photo.chat.id, photo=bl_wi_image)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ
            upd = models.Userinf.update({models.Userinf.black_white_photo: models.Userinf.black_white_photo + 1}) \
                .where(models.Userinf.chat_id == photo.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
            upd.execute()
        except BaseException:
            bot.send_message(photo.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —è –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ üòû\n' +
                             '‚úÖ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ')
    else:
        current_mode = data[f'{photo.chat.id}']['mode']
        bot.send_message(photo.chat.id, f'üìå –Ø –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ä–µ–∂–∏–º–µ "{current_mode}",' +
                         '—è —É–º–µ—é —ç—Ç–æ –¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ "üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç"')


@bot.message_handler(content_types=['text'])
def mods_and_their_functionality(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Ä–µ–∂–∏–º–∞ –±–æ—Ç–∞ –∏ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–∏—Ö —Ä–µ–∂–∏–º–æ–≤
    '''
    global data
    if message.text == 'üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè':  # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè", —Ç–æ –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—è
        data[f'{message.chat.id}']['mode'] = 'üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè'

    elif message.text == 'üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü':  # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü", —Ç–æ –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        data[f'{message.chat.id}']['mode'] = 'üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü'

    elif message.text == 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂':  # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂", —Ç–æ –º–µ–Ω—è–µ–º –Ω–∞ —ç—Ç–æ—Ç —Ä–µ–∂–∏–º
        data[f'{message.chat.id}']['mode'] = 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂'

    elif message.text == 'üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç':  # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "üñ§–ß–µ—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç", —Ç–æ –º–µ–Ω—è–µ–º –Ω–∞ —ç—Ç–æ—Ç —Ä–µ–∂–∏–º
        data[f'{message.chat.id}']['mode'] = 'üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç'

    elif message.text == 'üèÜ–ò–≥—Ä—ãüèÜ':  # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "üèÜ–ò–≥—Ä—ãüèÜ", —Ç–æ –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ –ò–≥—Ä—ã
        data[f'{message.chat.id}']['mode'] = 'üèÜ–ò–≥—Ä—ãüèÜ'

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞':
        try:
            path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω–æ–≥–æ
            if os.path.exists(path):
                dotenv.load_dotenv(path)
                adm_list = os.environ.get('admins_list').split()
        except BaseException:
            bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤')
        if str(message.chat.id) == adm_list[0]:
            data[f'{message.chat.id}']['admins_pod_mode'] = '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞'
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —á–∞—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
        else:
            bot.send_message(message.chat.id, '–î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞')

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞':
        try:
            path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω–æ–≥–æ
            if os.path.exists(path):
                dotenv.load_dotenv(path)
                adm_list = os.environ.get('admins_list').split()
        except BaseException:
            bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤')
        if str(message.chat.id) == adm_list[0]:
            data[f'{message.chat.id}']['admins_pod_mode'] = '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞'
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —á–∞—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
        else:
            bot.send_message(message.chat.id, '–î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞')

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ id':
        data[f'{message.chat.id}']['admins_pod_mode'] = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ id'
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ id –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Ç id':
        data[f'{message.chat.id}']['admins_pod_mode'] = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Ç id'
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∞—Ç id –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ firstname':
        data[f'{message.chat.id}']['admins_pod_mode'] = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ firstname'
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ firstname –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∂–∏–º–æ–≤':
        percentage_statistics_of_modes(message)

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–°–∞–º–∞—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∏–≥—Ä–∞':
        the_most_frequently_used_game(message)

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
        count_users(message)

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–†–µ–∫–æ—Ä–¥—Å–º–µ–Ω—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ä–µ–∂–∏–º–æ–≤':
        record_holders_for_the_use_of_modes(message)

    elif data[f'{message.chat.id}']['admins_mode'] == 'on' and message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö':
        inf_about_admin(message)

    if data[f'{message.chat.id}']['mode'] == 'üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè':
        if message.text == 'üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè':  # –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ —Ä–µ–∂–∏–º—É –∏ –º–µ–Ω—è–µ–º –Ω—É–∂–Ω—É—é –ø–µ—Ä–µ–º–Ω–Ω—É—é –Ω–∞ "–∑–∞–ø—Ä–æ—Å"
            data[f'{message.chat.id}']['wikipedia_assistant'] = '–∑–∞–ø—Ä–æ—Å'
            bot.send_message(message.chat.id, '–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –≤–∏–∫–∏–ø–µ–¥–∏–∏ üåèü§ì')
            bot.send_message(message.chat.id, '–†–µ–∂–∏–º üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè\n' +
                             '–Ø –º–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤–∑—è—Ç—É—é –∏–∑ –≤–∏–∫–∏–ø–µ–¥–∏–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É üôÇ\n' +
                             '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, –∞ –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üßêü•∏ü§ì')
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å üôÉ')
        else:
            wiki_reqest(message)

    elif data[f'{message.chat.id}']['mode'] == 'üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü':
        if message.text == 'üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü':  # –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ —Ä–µ–∂–∏–º—É
            bot.send_message(message.chat.id, '–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ üôÇ')
            bot.send_message(message.chat.id, '–†–µ–∂–∏–º üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üìü\n' + '\n' +
                             '–Ø –º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å —á–∏—Å–ª–æ–≤—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è üî¢\n' + '\n' +
                             '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–∫–∏:\n' + '–°–ª–æ–∂–µ–Ω–∏–µ - "+"\n' +
                             '–í—ã—á–∏—Ç–∞–Ω–∏–µ - "-"\n' + '–£–º–Ω–æ–∂–µ–Ω–∏–µ - "*"\n' + '–î–µ–ª–µ–Ω–∏–µ - "/"\n' +
                             '–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ - "//"\n' + '–û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è - "%"\n' +
                             '–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å - "**"\n' + '\n' + 'üìå–ü–æ–¥—Å–∫–∞–∑–∫–∞üìå\n' +
                             '–ß—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å –∫–æ—Ä–µ–Ω—å –∏–∑ —á–∏—Å–ª–∞, –º–æ–∂–Ω–æ —ç—Ç–æ —á–∏—Å–ª–æ –≤–æ–∑–≤–µ—Å—Ç–∏ –≤ —Å—Ç–µ–ø–µ–Ω—å 0.5\n' + '\n' +
                             '–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö —Å–∫–æ–±–∫–∏ - "(" –∏ ")"\n' + '\n' +
                             '‚úÖ–í—ã—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ—Å—á–∏—Ç–∞–Ω–æ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π‚úÖ')
        else:
            calculator(message)  # –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞

    elif data[f'{message.chat.id}']['mode'] == 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂' and data[f'{message.chat.id}']['pod_mode'] == '':
        if message.text == 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂':  # –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ —Ä–µ–∂–∏–º—É
            currency_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)  # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞
            # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã
            source_currency = types.KeyboardButton(data[f'{message.chat.id}']['original'])
            btn_arrow = types.KeyboardButton('‚Üí')  # –∫–Ω–æ–ø–∫–∞ —Å—Ç—Ä–µ–ª–æ—á–∫–∏
            # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
            converted_currency = types.KeyboardButton(data[f'{message.chat.id}']['necessary'])
            btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô') # –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
            # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞ –∫–æ–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
            currency_markup.add(source_currency, btn_arrow, converted_currency, btn_back)  # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            bot.send_message(message.chat.id, '–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç üí∏', reply_markup=currency_markup)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–∞–ª—é—Ç—É –∏ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ üíµ\n' +
                             '–ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ–Ω–µ–∂–Ω–æ–π —Å—É–º–º–æ–π –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞,' +
                             ' –∏ —è –≤–∞–º –µ—ë –ø–µ—Ä–µ–≤–µ–¥—É üí∞\n' + 'üìå –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç, ' +
                             '–Ω–∞–ø–∏—à–∏—Ç–µ "/currencies"')
        elif message.text == data[f'{message.chat.id}']['original']:  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ –Ω—É–∂–Ω—ã–π
            data[f'{message.chat.id}']['pod_mode'] = '–Ω–∞—á–∞–ª—å–Ω–∞—è'
        elif message.text == data[f'{message.chat.id}']['necessary']:  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ –Ω—É–∂–Ω—ã–π
            data[f'{message.chat.id}']['pod_mode'] = '–Ω—É–∂–Ω–∞—è'
        else:
            currency_transfer(message)  # –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥ –≤–∞–ª—é—Ç

    elif data[f'{message.chat.id}']['mode'] == 'üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç':
        if message.text == 'üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç':  # –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ —Ä–µ–∂–∏–º—É
            bot.send_message(message.chat.id, '–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º —á—ë—Ä–Ω–æ-–±–µ–ª—ã—Ö —Ñ–æ—Ç–æ üñ§ü§ç')
            bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ, –∞ —è –≤–∞–º —Å–¥–µ–ª–∞—é –µ–≥–æ —á—ë—Ä–Ω–æ-–±–µ–ª—ã–º üòú')
        else:
            bot.send_message(message.chat.id, '–¢—É—Ç —è –Ω–∏—á–µ–≥–æ –Ω–µ –º–æ–≥—É –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç—å üôÅ\n' +
                             '‚úÖ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ —è —Å–¥–µ–ª–∞—é –µ—ë —á—ë—Ä–Ω–æ-–±–µ–ª–æ–π')

    elif data[f'{message.chat.id}']['mode'] == 'üèÜ–ò–≥—Ä—ãüèÜ' and data[f'{message.chat.id}']['pod_mode'] == '':
        if message.text == 'üèÜ–ò–≥—Ä—ãüèÜ':  # –º–µ–Ω—è–µ–º –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫ –∏ –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ —Ç–æ–º, —á—Ç–æ —Ä–µ–∂–∏–º –∏–≥—Ä –≤–∫–ª—é—á—ë–Ω
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn_random_number = types.KeyboardButton('üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢')
            btn_random_word = types.KeyboardButton('‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí')
            btn_dice = types.KeyboardButton('üé≤–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏üé≤')
            btn_basketball = types.KeyboardButton('üèÄ–ë–∞—Å–∫–µ—Ç–±–æ–ªüèÄ')
            btn_football = types.KeyboardButton('‚öΩ–§—É—Ç–±–æ–ª‚öΩ')
            btn_bowling = types.KeyboardButton('üé≥–ë–æ—É–ª–∏–Ω–≥üé≥')
            btn_darts = types.KeyboardButton('üéØ–î–∞—Ä—Ç—ÅüéØ')
            btn_slot_machine = types.KeyboardButton('üé∞–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Çüé∞')
            btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')
            markup.add(btn_random_number, btn_random_word, btn_dice, btn_basketball, btn_football, btn_bowling,
                       btn_darts, btn_slot_machine, btn_back)
            bot.send_message(message.chat.id, '–í—ã –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º –∏–≥—Ä üôÇ', reply_markup=markup)
        elif message.text == 'üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢':  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ "üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢"
            data[f'{message.chat.id}']['pod_mode'] = 'üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢'
        elif message.text == '‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí':  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ "‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí"
            data[f'{message.chat.id}']['pod_mode'] = '‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí'
        else:
            games(message)  # –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–≥—Ä

    if data[f'{message.chat.id}']['mode'] == 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂' and\
            data[f'{message.chat.id}']['pod_mode'] == '–Ω–∞—á–∞–ª—å–Ω–∞—è':
        changing_the_initial_currency(message)  # –º–µ–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å

    elif data[f'{message.chat.id}']['mode'] == 'üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂' and\
            data[f'{message.chat.id}']['pod_mode'] == '–Ω—É–∂–Ω–∞—è':
        changing_the_desired_currency(message)  # –º–µ–Ω—è–µ–º –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏

    elif data[f'{message.chat.id}']['mode'] == 'üèÜ–ò–≥—Ä—ãüèÜ' and\
            data[f'{message.chat.id}']['pod_mode'] == 'üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢':
        random_number(message)  # –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–≥—Ä—ã "–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ"

    elif data[f'{message.chat.id}']['mode'] == 'üèÜ–ò–≥—Ä—ãüèÜ' and\
            data[f'{message.chat.id}']['pod_mode'] == '‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí':
        random_word(message)  # –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–≥—Ä—ã "–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ"

    if data[f'{message.chat.id}']['admins_pod_mode'] == '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞' and message.text != '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞':
        add_admin(message)

    elif data[f'{message.chat.id}']['admins_pod_mode'] == '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞' and message.text != '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞':
        del_admin(message)

    elif data[f'{message.chat.id}']['admins_pod_mode'] == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ id' and message.text != '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ id':
        output_of_user_statistics(message, 'id')

    elif data[f'{message.chat.id}']['admins_pod_mode'] == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Ç id' and\
            message.text != '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Ç id':
        output_of_user_statistics(message, 'chat_id')

    elif data[f'{message.chat.id}']['admins_pod_mode'] == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ firstname' and\
            message.text != '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ firstname':
        output_of_user_statistics(message, 'first_name')

    with open('data_mode.json', 'w') as dm_jss:  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å —Å–ª–æ–≤–∞—Ä—è —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–∂–∏–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ json —Ñ–∞–π–ª
        json.dump(data, dm_jss)


def percentage_statistics_of_modes(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–æ–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ–∂–∏–º–æ–≤
    '''
    global data
    data[f'{message.chat.id}']['admins_pod_mode'] = ''
    try:  # –ø–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π —Ä–µ–∂–∏–º–æ–≤ –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
        wikipedia = 0
        calculator = 0
        currency_converter = 0
        black_white_photo = 0
        game = 0
        path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π id
        if os.path.exists(path):
            dotenv.load_dotenv(path)
            id = int(os.environ.get('id'))
        for i in range(1, id + 1):  # —Å–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∂–∏–º–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            data_user = models.Userinf.get(models.Userinf.id == str(i))
            wikipedia += data_user.wikipedia
            calculator += data_user.calculator
            currency_converter += data_user.currency_converter
            black_white_photo += data_user.black_white_photo
            game += data_user.game
        all = wikipedia + calculator + currency_converter + black_white_photo + game
        bot.send_message(message.chat.id, f'<b>–í–∏–∫–∏–ø–µ–¥–∏—è</b> ({wikipedia * 100 // all}%) - {wikipedia}\n' +
                         f'<b>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</b> ({calculator * 100 // all}%) - {calculator}\n' +
                         f'<b>–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç</b> ({currency_converter * 100 // all}%) - {currency_converter}\n' +
                         f'<b>–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æ</b> ({black_white_photo * 100 // all}%) - {black_white_photo}\n' +
                         f'<b>–ò–≥—Ä—ã</b> ({game * 100 // all}%) - {game}\n\n' + f'–í—Å–µ–≥–æ: {all}', parse_mode='html')
    except BaseException:
        bot.send_message(message.chat.id, '–°–ª—É—á–∏–ª–∞—Å—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def the_most_frequently_used_game(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å–∞–º–æ–π —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –∏–≥—Ä–µ
    '''
    global data
    data[f'{message.chat.id}']['admins_pod_mode'] = ''
    try:  # –ø–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –≤—Å–µ—Ö –∏–≥—Ä –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
        random_number = 0
        random_word = 0
        game_dice = 0
        basketball = 0
        football = 0
        bowling = 0
        darts = 0
        slot_machine = 0
        path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π id
        if os.path.exists(path):
            dotenv.load_dotenv(path)
            id = int(os.environ.get('id'))
        for i in range(1, id + 1):  # —Å–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∏–≥—Ä–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            data_user = models.Userinf.get(models.Userinf.id == str(i))
            random_number += data_user.random_number
            random_word += data_user.random_word
            game_dice += data_user.game_dice
            basketball += data_user.basketball
            football += data_user.football
            bowling += data_user.bowling
            darts += data_user.darts
            slot_machine += data_user.slot_machine
        all = random_number + random_word + game_dice + basketball + football + bowling + darts + slot_machine
        bot.send_message(message.chat.id, f'<b>–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ</b> ({random_number * 100 // all}%) - ' +
                         f'{random_number}\n' +
                         f'<b>–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ</b> ({random_word * 100 // all}%) - {random_word}\n' +
                         f'<b>–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏</b> ({game_dice * 100 // all}%) - {game_dice}\n' +
                         f'<b>–ë–∞—Å–∫–µ—Ç–±–æ–ª</b> ({basketball * 100 // all}%) - {basketball}\n' +
                         f'<b>–§—É—Ç–±–æ–ª</b> ({football * 100 // all}%) - {football}\n' +
                         f'<b>–ë–æ—É–ª–∏–Ω–≥</b> ({bowling * 100 // all}%) - {bowling}\n' +
                         f'<b>–î–∞—Ä—Ç—Å</b> ({darts * 100 // all}%) - {darts}\n' +
                         f'<b>–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç</b> ({slot_machine * 100 // all}%) - {slot_machine}\n\n' +
                         f'–í—Å–µ–≥–æ: {all}', parse_mode='html')
    except BaseException:
        bot.send_message(message.chat.id, '–°–ª—É—á–∏–ª–∞—Å—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def record_holders_for_the_use_of_modes(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ —Ä–µ–∫–æ—Ä–¥—Å–º–µ–Ω–∞—Ö –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ä–µ–∂–∏–º–æ–≤
    '''
    global data
    data[f'{message.chat.id}']['admins_pod_mode'] = ''
    result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    try:  # –ø–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤ –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–º
        path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π id
        if os.path.exists(path):
            dotenv.load_dotenv(path)
            id = int(os.environ.get('id'))
        for i in range(1, id + 1):  # —Å–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∂–∏–º–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            data_user = models.Userinf.get(models.Userinf.id == str(i))
            if data_user.wikipedia > result[0]:
                result[0] = data_user.wikipedia
            if data_user.calculator > result[1]:
                result[1] = data_user.calculator
            if data_user.currency_converter > result[2]:
                result[2] = data_user.currency_converter
            if data_user.black_white_photo > result[3]:
                result[3] = data_user.black_white_photo
            if data_user.game > result[4]:
                result[4] = data_user.game
            if data_user.random_number > result[5]:
                result[5] = data_user.random_number
            if data_user.random_word > result[6]:
                result[6] = data_user.random_word
            if data_user.game_dice > result[7]:
                result[7] = data_user.game_dice
            if data_user.basketball > result[8]:
                result[8] = data_user.basketball
            if data_user.football > result[9]:
                result[9] = data_user.football
            if data_user.bowling > result[10]:
                result[10] = data_user.bowling
            if data_user.darts > result[11]:
                result[11] = data_user.darts
            if data_user.slot_machine > result[12]:
                result[12] = data_user.slot_machine
        wiki_rh = models.Userinf.get(models.Userinf.wikipedia == result[0])
        cal_rh = models.Userinf.get(models.Userinf.calculator == result[1])
        cc_rh = models.Userinf.get(models.Userinf.currency_converter == result[2])
        bwp_rh = models.Userinf.get(models.Userinf.black_white_photo == result[3])
        g_rh = models.Userinf.get(models.Userinf.game == result[4])
        rn_rh = models.Userinf.get(models.Userinf.random_number == result[5])
        rw_rh = models.Userinf.get(models.Userinf.random_word == result[6])
        gd_rh = models.Userinf.get(models.Userinf.game_dice == result[7])
        bas_rh = models.Userinf.get(models.Userinf.basketball == result[8])
        f_rh = models.Userinf.get(models.Userinf.football == result[9])
        bow_rh = models.Userinf.get(models.Userinf.bowling == result[10])
        dar_rh = models.Userinf.get(models.Userinf.darts == result[11])
        slm_rh = models.Userinf.get(models.Userinf.slot_machine == result[12])
        bot.send_message(message.chat.id, f'<b>–í–∏–∫–∏–ø–µ–¥–∏—è</b> ({result[0]}) -\n' +
                         f'{wiki_rh.id} {wiki_rh.first_name} {wiki_rh.last_name} {wiki_rh.username}\n\n' +
                         f'<b>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</b> ({result[1]}) -\n' +
                         f'{cal_rh.id} {cal_rh.first_name} {cal_rh.last_name} {cal_rh.username}\n\n' +
                         f'<b>–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç</b> ({result[2]}) -\n' +
                         f'{cc_rh.id} {cc_rh.first_name} {cc_rh.last_name} {cc_rh.username}\n\n' +
                         f'<b>–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æ</b> ({result[3]}) -\n' +
                         f'{bwp_rh.id} {bwp_rh.first_name} {bwp_rh.last_name} {bwp_rh.username}\n\n' +
                         f'<b>–ò–≥—Ä—ã</b> ({result[4]}) -\n' +
                         f'{g_rh.id} {g_rh.first_name} {g_rh.last_name} {g_rh.username}\n\n' +
                         f'<b>–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ</b> ({result[5]}) -\n' +
                         f'{rn_rh.id} {rn_rh.first_name} {rn_rh.last_name} {rn_rh.username}\n\n' +
                         f'<b>–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ–æ</b> ({result[6]}) -\n' +
                         f'{rw_rh.id} {rw_rh.first_name} {rw_rh.last_name} {rw_rh.username}\n\n' +
                         f'<b>–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏</b> ({result[7]}) -\n' +
                         f'{gd_rh.id} {gd_rh.first_name} {gd_rh.last_name} {gd_rh.username}\n\n' +
                         f'<b>–ë–∞—Å–∫–µ—Ç–±–æ–ª</b> ({result[8]}) -\n' +
                         f'{bas_rh.id} {bas_rh.first_name} {bas_rh.last_name} {bas_rh.username}\n\n' +
                         f'<b>–§—É—Ç–±–æ–ª</b> ({result[9]}) -\n' +
                         f'{f_rh.id} {f_rh.first_name} {f_rh.last_name} {f_rh.username}\n\n' +
                         f'<b>–ë–æ—É–ª–∏–Ω–≥</b> ({result[10]}) -\n' +
                         f'{bow_rh.id} {bow_rh.first_name} {bow_rh.last_name} {bow_rh.username}\n\n' +
                         f'<b>–î–∞—Ä—Ç—Å</b> ({result[11]}) -\n' +
                         f'{dar_rh.id} {dar_rh.first_name} {dar_rh.last_name} {dar_rh.username}\n\n' +
                         f'<b>–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç</b> ({result[12]}) -\n' +
                         f'{slm_rh.id} {slm_rh.first_name} {slm_rh.last_name} {slm_rh.username}', parse_mode='html')
    except BaseException:
        bot.send_message(message.chat.id, '–°–ª—É—á–∏–ª–∞—Å—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def count_users(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –±–æ—Ç–∞
    '''
    global data
    data[f'{message.chat.id}']['admins_pod_mode'] = ''
    try:
        path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π id
        if os.path.exists(path):
            dotenv.load_dotenv(path)
            bot.send_message(message.chat.id, f'–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n<b>{os.environ.get("id")}</b>',
                             parse_mode='html')
    except BaseException:
        bot.send_message(message.chat.id, '–°–ª—É—á–∏–ª–∞—Å—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def output_of_user_statistics(message, key):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∫–ª—é—á—É key (first_name, id, chat_id)
    '''
    global check_admins_mode
    if message.text not in check_admins_mode:
        try:
            with models.db:  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥
                if key == 'id':
                    data_user = models.Userinf.get(models.Userinf.id == message.text)
                elif key == 'chat_id':
                    data_user = models.Userinf.get(models.Userinf.chat_id == message.text)
                elif key == 'first_name':
                    data_user = models.Userinf.get(models.Userinf.first_name == message.text)
            bot.send_message(message.chat.id, f'<b>id</b>: {data_user.id}\n' +
                             f'<b>chat_id</b>: {data_user.chat_id}\n' +
                             f'<b>first_name</b>: {data_user.first_name}\n' +
                             f'<b>last_name</b>: {data_user.last_name}\n' +
                             f'<b>username</b>: {data_user.username}\n' + f'<b>wikipedia</b>: {data_user.wikipedia}\n' +
                             f'<b>calculator</b>: {data_user.calculator}\n' +
                             f'<b>currency_converter</b>: {data_user.currency_converter}\n' +
                             f'<b>black_white_photo</b>: {data_user.black_white_photo}\n' +
                             f'<b>game</b>: {data_user.game}\n' +
                             f'<b>random_number</b>: {data_user.random_number}\n' +
                             f'<b>random_word</b>: {data_user.random_word}\n' +
                             f'<b>game_dice</b>: {data_user.game_dice}\n' +
                             f'<b>basketball</b>: {data_user.basketball}\n' +
                             f'<b>football</b>: {data_user.football}\n' + f'<b>bowling</b>: {data_user.bowling}\n' +
                             f'<b>darts</b>: {data_user.darts}\n' + f'<b>slot_machine</b>: {data_user.slot_machine}\n',
                             parse_mode='html')
        except BaseException:
            bot.send_message(message.chat.id, '–°–ª—É—á–∏–ª–∞—Å—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def inf_about_admin(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö
    '''
    global data
    data[f'{message.chat.id}']['admins_pod_mode'] = ''
    try:
        path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏ –≤—ã–≤–æ–¥–∏–º –æ –Ω–∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if os.path.exists(path):
            dotenv.load_dotenv(path)
            adm_list = os.environ.get('admins_list').split()
        for chat_id in adm_list:
            with models.db:  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥
                data_admin = models.Userinf.get(models.Userinf.chat_id == chat_id)
            if chat_id == adm_list[0]:
                bot.send_message(message.chat.id, f'<b>–ì–õ–ê–í–ù–´–ô –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b> (id = {data_admin.id})\n' +
                                 f'{data_admin.first_name} {data_admin.last_name} {data_admin.username}',
                                 parse_mode='html')
            else:
                bot.send_message(message.chat.id, f'<b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b> (id = {data_admin.id}, ' +
                                 f'chat_id = {data_admin.chat_id})\n' +
                                 f'{data_admin.first_name} {data_admin.last_name} {data_admin.username}',
                                 parse_mode='html')
    except BaseException:
        bot.send_message(message.chat.id, f'–°–ª—É—á–∏–ª–∞—Å—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def del_admin(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤
    '''
    global check_admins_mode
    if message.text not in check_admins_mode:
        try:
            path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—É–¥–∞ –Ω–æ–≤–æ–≥–æ
            if os.path.exists(path):
                dotenv.load_dotenv(path)
                adm_list = os.environ.get('admins_list').split()
                adm_list.remove(message.text)
                admins_list = ' '.join(adm_list)
            dotenv_file = dotenv.find_dotenv()
            dotenv.load_dotenv(dotenv_file)
            os.environ["admins_list"] = admins_list
            dotenv.set_key(dotenv_file, "admins_list", os.environ["admins_list"])
            bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "{message.text}" —É–¥–∞–ª—ë–Ω –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')
        except BaseException:
            bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "{message.text}" –Ω–µ—Ç ' +
                             '–≤ —Å–ø–∏—Å–∫–∞—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')


def add_admin(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤
    '''
    global check_admins_mode
    if message.text not in check_admins_mode:
        try:
            path = os.path.join(os.path.dirname(__file__), '.env')  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—É–¥–∞ –Ω–æ–≤–æ–≥–æ
            if os.path.exists(path):
                dotenv.load_dotenv(path)
                admins_list = os.environ.get('admins_list') + f' {message.text}'
            dotenv_file = dotenv.find_dotenv()
            dotenv.load_dotenv(dotenv_file)
            os.environ["admins_list"] = admins_list
            dotenv.set_key(dotenv_file, "admins_list", os.environ["admins_list"])
            bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "{message.text}" —Å–¥–µ–ª–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —É—Å–ø–µ—à–Ω–æ!')
        except BaseException:
            bot.send_message(message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞')


def wiki_reqest(req):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏
    '''
    global data
    wiki.set_lang('ru')  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤
    if data[f'{req.chat.id}']['wikipedia_assistant'] == '–∑–∞–ø—Ä–æ—Å':
        try:  # –∏—â—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –≤—ã–±–æ–∞
            search_result = wiki.search(req.text, results=5)
            data[f'{req.chat.id}']['results_request'] = search_result
            bot.send_message(req.chat.id, '–í–æ—Ç —á—Ç–æ —è –Ω–∞—à—ë–ª –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—Éü§ì\n' + f'1) {search_result[0]}\n' +
                             f'2) {search_result[1]}\n' + f'3) {search_result[2]}\n' + f'4) {search_result[3]}\n' +
                             f'5) {search_result[4]}\n' + '\n' +
                             '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –Ω—É–∂–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –∏ —è –≤–∞–º –≤—ã–¥–∞–º –æ–± —ç—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ü•∏\n' + '\n'
                             '‚úÖ –ß—Ç–æ–±—ã –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å, –≤–≤–µ–¥–∏—Ç–µ "/exit"')
            data[f'{req.chat.id}']['wikipedia_assistant'] = '–≤—ã–±–æ—Ä'
        except BaseException:
            bot.send_message(req.chat.id, f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É: "{req.text}" ‚òπ\n' +
                             '‚ùó–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å‚ùó')
    elif data[f'{req.chat.id}']['wikipedia_assistant'] == '–≤—ã–±–æ—Ä':
        try:
            index = int(req.text)
            if 1 <= index <= 5:  # –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                try:
                    answer = wiki.summary(data[f'{req.chat.id}']['results_request'][index - 1])
                    markup_link = types.InlineKeyboardMarkup()  # –∫–Ω–æ–ø–∫–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –≤–∏–∫–∏–ø–µ–¥–∏—é
                    link = 'https://ru.wikipedia.org/wiki/' + data[f'{req.chat.id}']['results_request'][index - 1]
                    url_button = types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏', url=link)
                    markup_link.add(url_button)
                    bot.send_message(req.chat.id, answer, reply_markup=markup_link)
                    bot.send_message(req.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å üôÉ')
                    data[f'{req.chat.id}']['results_request'] = []
                    data[f'{req.chat.id}']['wikipedia_assistant'] = '–∑–∞–ø—Ä–æ—Å'
                    upd = models.Userinf.update({models.Userinf.wikipedia: models.Userinf.wikipedia + 1}) \
                        .where(models.Userinf.chat_id == req.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
                    upd.execute()
                except BaseException:
                    bot.send_message(req.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–µ–º—É –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª ‚òπ' +
                                     '‚úÖ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Ü–∏—Ñ—Ä—É')
            else:
                bot.send_message(req.chat.id, '‚ùó–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞‚ùó\n' +
                                 '–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5 –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ü•∏')
        except BaseException:
            bot.send_message(req.chat. id, '‚ùó–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞‚ùó\n' +
                             '–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5 –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ü•∏')


def calculator(expression):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    '''
    try:
        bot.send_message(expression.chat.id, eval(expression.text))
        upd = models.Userinf.update({models.Userinf.calculator: models.Userinf.calculator + 1}) \
            .where(models.Userinf.chat_id == expression.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()
    except ZeroDivisionError:
        bot.send_message(expression.chat.id, '‚Äº–ù–∞ –Ω–æ–ª—å –¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è‚Äº')
    except BaseException:
        bot.send_message(expression.chat.id, '–Ø –Ω–µ –º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ç–∞–∫–æ–µ üòï\n' + '‚Äº–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞‚Äº')


def currency_transfer(money):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞–ª—é—Ç
    '''
    global data
    if money.text == 'üîô–ù–∞–∑–∞–¥üîô':  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
        data[f'{money.chat.id}']['mode'] = ''  # –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ ''
        data[f'{money.chat.id}']['pod_mode'] = ''  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ ''
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–æ–≤
        btn_calculator = types.KeyboardButton('üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü')
        btn_game = types.KeyboardButton('üèÜ–ò–≥—Ä—ãüèÜ')
        btn_wikipedia = types.KeyboardButton('üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè')
        black_white_photo = types.KeyboardButton('üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç')
        currency_converter = types.KeyboardButton('üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂')
        markup.add(btn_wikipedia, btn_calculator, currency_converter, black_white_photo, btn_game)
        bot.send_message(money.chat.id, '–†–µ–∂–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç –≤—ã–∫–ª—é—á–µ–Ω ü§ë', reply_markup=markup)
    else:  # –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤–∞–ª—é—Ç—ã
        try:
            currency_list = converter.latest_rate()
            if data[f'{money.chat.id}']['original'] == 'USD':
                res_money = int(money.text) * currency_list[data[f'{money.chat.id}']['necessary']]
                bot.send_message(money.chat.id, res_money)
                upd = models.Userinf.update({models.Userinf.currency_converter: models.Userinf.currency_converter + 1})\
                    .where(models.Userinf.chat_id == money.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
                upd.execute()
            else:
                in_usd = int(money.text) / currency_list[data[f'{money.chat.id}']['original']]
                res_money = in_usd * currency_list[data[f'{money.chat.id}']['necessary']]
                bot.send_message(money.chat.id, res_money)
                upd = models.Userinf.update({models.Userinf.currency_converter: models.Userinf.currency_converter + 1})\
                    .where(models.Userinf.chat_id == money.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
                upd.execute()
        except BaseException:
            bot.send_message(money.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ‚òπ\n' +
                             '–í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ –≤–∞–ª—é—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞‚ùó\n' +
                             '‚úÖ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Å—É–º–º—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø–æ–∑–∂–µ üí∞')


def changing_the_initial_currency(currency):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–∞–ª—é—Ç—ã, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å
    '''
    global list_of_supported_currencies, data
    if currency.text == data[f'{currency.chat.id}']['original']:
        bot.send_message(currency.chat.id, f'–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –≤–∞–ª—é—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥: "' +
                         data[f'{currency.chat.id}']['original'] + '"\n' +
                         '‚úÖ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –≤–∞–ª—é—Ç—É\n' + '\n' +
                         'üìå –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ "/currencies"')
    elif currency.text == 'üîô–ù–∞–∑–∞–¥üîô':  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
        data[f'{currency.chat.id}']['mode'] = ''  # –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ ''
        data[f'{currency.chat.id}']['pod_mode'] = ''  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ ''
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–æ–≤
        btn_calculator = types.KeyboardButton('üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü')
        btn_game = types.KeyboardButton('üèÜ–ò–≥—Ä—ãüèÜ')
        btn_wikipedia = types.KeyboardButton('üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè')
        black_white_photo = types.KeyboardButton('üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç')
        currency_converter = types.KeyboardButton('üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂')
        markup.add(btn_wikipedia, btn_calculator, currency_converter, black_white_photo, btn_game)
        bot.send_message(currency.chat.id, '–†–µ–∂–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç –≤—ã–∫–ª—é—á–µ–Ω ü§ë', reply_markup=markup)
    else:
        if currency.text.upper() in list_of_supported_currencies:
            data[f'{currency.chat.id}']['original'] = currency.text.upper()
            currency_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)  # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞
            # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã
            source_currency = types.KeyboardButton(data[f'{currency.chat.id}']['original'])
            btn_arrow = types.KeyboardButton('‚Üí')  # –∫–Ω–æ–ø–∫–∞ —Å—Ç—Ä–µ–ª–æ—á–∫–∏
            # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
            converted_currency = types.KeyboardButton(data[f'{currency.chat.id}']['necessary'])
            btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')  # –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
            # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞ –∫–æ–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
            currency_markup.add(source_currency, btn_arrow, converted_currency, btn_back)  # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            bot.send_message(currency.chat.id, '‚úÖ –í–∞–ª—é—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',reply_markup=currency_markup)
            data[f'{currency.chat.id}']['pod_mode'] = ''
        else:
            bot.send_message(currency.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –Ω–µ—Ç—É ‚òπ\n' + '‚úÖ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â—ë —Ä–∞–∑')


def changing_the_desired_currency(currency):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –Ω—É–∂–Ω–æ–π –≤–∞–ª—é—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å
    '''
    global list_of_supported_currencies, data
    if currency.text == data[f'{currency.chat.id}']['necessary']:
        bot.send_message(currency.chat.id, f'–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –≤–∞–ª—é—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥: "' +
                         data[f'{currency.chat.id}']['necessary'] + '"\n' +
                         '‚úÖ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –≤–∞–ª—é—Ç—É\n' + '\n' +
                         'üìå –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ "/currencies"')
    elif currency.text == 'üîô–ù–∞–∑–∞–¥üîô':  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
        data[f'{currency.chat.id}']['mode'] = ''  # –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ ''
        data[f'{currency.chat.id}']['pod_mode'] = ''  # –º–µ–Ω—è–µ–º –ø–æ–¥ —Ä–µ–∂–∏–º –Ω–∞ ''
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–æ–≤
        btn_calculator = types.KeyboardButton('üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü')
        btn_game = types.KeyboardButton('üèÜ–ò–≥—Ä—ãüèÜ')
        btn_wikipedia = types.KeyboardButton('üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè')
        black_white_photo = types.KeyboardButton('üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç')
        currency_converter = types.KeyboardButton('üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂')
        markup.add(btn_wikipedia, btn_calculator, currency_converter, black_white_photo, btn_game)
        bot.send_message(currency.chat.id, '–†–µ–∂–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç –≤—ã–∫–ª—é—á–µ–Ω ü§ë', reply_markup=markup)
    else:
        if currency.text.upper() in list_of_supported_currencies:
            data[f'{currency.chat.id}']['necessary'] = currency.text.upper()
            currency_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)  # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞
            # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã
            source_currency = types.KeyboardButton(data[f'{currency.chat.id}']['original'])
            btn_arrow = types.KeyboardButton('‚Üí')  # –∫–Ω–æ–ø–∫–∞ —Å—Ç—Ä–µ–ª–æ—á–∫–∏
            # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
            converted_currency = types.KeyboardButton(data[f'{currency.chat.id}']['necessary'])
            btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')  # –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
            # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞ –∫–æ–≤–µ—Ä—Ç–æ—Ä–∞ –≤–∞–ª—é—Ç
            currency_markup.add(source_currency, btn_arrow, converted_currency, btn_back)  # –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
            bot.send_message(currency.chat.id, '‚úÖ –í–∞–ª—é—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ', reply_markup=currency_markup)
            data[f'{currency.chat.id}']['pod_mode'] = ''
        else:
            bot.send_message(currency.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –Ω–µ—Ç—É ‚òπ\n' + '‚úÖ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â—ë —Ä–∞–∑')


def black_white_photo(image):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á—ë—Ä–Ω–æ-–±–µ–ª–æ–≥–æ —Ñ–æ—Ç–æ
    '''
    pixels = image.load()  # —Å–ø–∏—Å–æ–∫ —Å –ø–∏–∫—Å–µ–ª—è–º–∏
    x, y = image.size  # —à–∏—Ä–∏–Ω–∞ (x) –∏ –≤—ã—Å–æ—Ç–∞ (y) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for i in range(x):  # –¥–µ–ª–∞–µ–º —Ñ–æ—Ç–æ —á—ë—Ä–Ω–æ-–±–µ–ª—ã–º
        for j in range(y):
            r, g, b = pixels[i, j]
            bw = (r + g + b) // 3
            pixels[i, j] = bw, bw, bw
    return image  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —á—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æ


def games(name_of_the_game):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–∞ –∏–≥—Ä
    '''
    global data
    if name_of_the_game.text == 'üîô–ù–∞–∑–∞–¥üîô':
        data[f'{name_of_the_game.chat.id}']['mode'] = ''  # –º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –Ω–∞ ''
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–æ–≤
        btn_calculator = types.KeyboardButton('üìü–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüìü')
        btn_game = types.KeyboardButton('üèÜ–ò–≥—Ä—ãüèÜ')
        btn_wikipedia = types.KeyboardButton('üåè–í–∏–∫–∏–ø–µ–¥–∏—èüåè')
        black_white_photo = types.KeyboardButton('üñ§–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æü§ç')
        currency_converter = types.KeyboardButton('üí∞–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Çüí∂')
        markup.add(btn_wikipedia, btn_calculator, currency_converter, black_white_photo, btn_game)
        bot.send_message(name_of_the_game.chat.id, '–†–µ–∂–∏–º –∏–≥—Ä –≤—ã–∫–ª—é—á–µ–Ω ü§™', reply_markup=markup)
    elif name_of_the_game.text == 'üé≤–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏üé≤': # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ "–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏"
        bot.send_dice(name_of_the_game.chat.id, 'üé≤')

        upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

        upd = models.Userinf.update({models.Userinf.game_dice: models.Userinf.game_dice + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()
    elif name_of_the_game.text == 'üèÄ–ë–∞—Å–∫–µ—Ç–±–æ–ªüèÄ':  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ "–ë–∞—Å–∫–µ—Ç–±–æ–ª"
        bot.send_dice(name_of_the_game.chat.id, 'üèÄ')

        upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

        upd = models.Userinf.update({models.Userinf.basketball: models.Userinf.basketball + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

    elif name_of_the_game.text == '‚öΩ–§—É—Ç–±–æ–ª‚öΩ':  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ "–§—É—Ç–±–æ–ª"
        bot.send_dice(name_of_the_game.chat.id, '‚öΩ')

        upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

        upd = models.Userinf.update({models.Userinf.football: models.Userinf.football + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

    elif name_of_the_game.text == 'üé≥–ë–æ—É–ª–∏–Ω–≥üé≥':  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ "–ë–æ—É–ª–∏–Ω–≥"
        bot.send_dice(name_of_the_game.chat.id, 'üé≥')

        upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

        upd = models.Userinf.update({models.Userinf.bowling: models.Userinf.bowling + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

    elif name_of_the_game.text == 'üéØ–î–∞—Ä—Ç—ÅüéØ':  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ "–î–∞—Ä—Ç—Å"
        bot.send_dice(name_of_the_game.chat.id, 'üéØ')

        upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

        upd = models.Userinf.update({models.Userinf.darts: models.Userinf.darts + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

    elif name_of_the_game.text == 'üé∞–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Çüé∞':  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ "–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç"
        bot.send_dice(name_of_the_game.chat.id, 'üé∞')

        upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()

        upd = models.Userinf.update({models.Userinf.slot_machine: models.Userinf.slot_machine + 1}) \
            .where(models.Userinf.chat_id == name_of_the_game.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
        upd.execute()


def random_number(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–≥—Ä—ã —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ
    '''
    global data
    if message.text == 'üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢':  # —Å–æ–∑–¥–∞—ë–º –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn_choose = types.KeyboardButton('üî¢–í—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æüî¢')
        btn_set_the_range = types.KeyboardButton('üìù–ó–∞–¥–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ωüìù')
        btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')
        markup.add(btn_choose, btn_set_the_range, btn_back)
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ "–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ" üòÄ', reply_markup=markup)
        bot.send_message(message.chat.id, '–ó–∞–¥–∞–π—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –¥–∏–∞–ø–∞–∑–æ–Ω –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üî¢–í—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æüî¢",' +
                         ' –∏ —è –≤—ã–±–µ—Ä—É —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ —ç—Ç–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –≤–∫–ª—é—á–∞—è –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è üòÅ')
        if len(data[f'{message.chat.id}']['list_for_game_random_number']) != 0:
            ot = data[f'{message.chat.id}']['list_for_game_random_number'][0]
            do = data[f'{message.chat.id}']['list_for_game_random_number'][1]
            bot.send_message(message.chat.id, f'–°–µ–π—á–∞—Å —É –≤–∞—Å –¥–∏–∞–ø–∞–∑–æ–Ω: –æ—Ç {ot} –¥–æ {do}')
    elif message.text == 'üî¢–í—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æüî¢':  # –≤—ã–±–∏—Ä–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞
        data[f'{message.chat.id}']['game_function_check'] = ''
        if len(data[f'{message.chat.id}']['list_for_game_random_number']) != 0:
            number_1 = data[f'{message.chat.id}']['list_for_game_random_number'][0]
            number_2 = data[f'{message.chat.id}']['list_for_game_random_number'][1]
            bot.send_message(message.chat.id, f'{randint(number_1, number_2)}')

            upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
                .where(models.Userinf.chat_id == message.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
            upd.execute()

            upd = models.Userinf.update({models.Userinf.random_number: models.Userinf.random_number + 1}) \
                .where(models.Userinf.chat_id == message.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
            upd.execute()
        else:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —è –≤—ã–±—Ä–∞–ª —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ,' +
                             ' –≤–∞–º —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω üòâ')
    elif message.text == 'üìù–ó–∞–¥–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ωüìù':  # –º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–≥—Ä—ã –Ω–∞ –Ω—É–∂–Ω—É—é
        data[f'{message.chat.id}']['game_function_check'] = '–î–∏–∞–ø–∞–∑–æ–Ω'
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ ü§†')
        if len(data[f'{message.chat.id}']['list_for_game_random_number']) != 0:
            ot = data[f'{message.chat.id}']['list_for_game_random_number'][0]
            do = data[f'{message.chat.id}']['list_for_game_random_number'][1]
            bot.send_message(message.chat.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω: –æ—Ç {ot} –¥–æ {do}')
    elif data[f'{message.chat.id}']['game_function_check'] == '–î–∏–∞–ø–∞–∑–æ–Ω' and message.text != 'üìù–ó–∞–¥–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ωüìù':
        if message.text != 'üîô–ù–∞–∑–∞–¥üîô':  # –∑–∞–¥–∞—ë–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
            try:
                lst_for_data = [int(num) for num in message.text.split()]
                lst_for_data.sort()
                data[f'{message.chat.id}']['list_for_game_random_number'] = lst_for_data
                if len(data[f'{message.chat.id}']['list_for_game_random_number']) != 2:
                    data[f'{message.chat.id}']['list_for_game_random_number'] = []
                    bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ üôÅ\n' +
                                     '‚ùó –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 2 —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª ‚ùó')
                else:
                    bot.send_message(message.chat.id, '–î–∏–∞–ø–∞–∑–æ–Ω –∑–∞–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ')
            except BaseException:
                bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–¥–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ ‚òπ')
    if message.text == 'üîô–ù–∞–∑–∞–¥üîô':  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä –∏ –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ —Ç–æ–º —á—Ç–æ –∏–≥—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞
        data[f'{message.chat.id}']['pod_mode'] = ''
        data[f'{message.chat.id}']['game_function_check'] = ''
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn_random_number = types.KeyboardButton('üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢')
        btn_random_word = types.KeyboardButton('‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí')
        btn_dice = types.KeyboardButton('üé≤–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏üé≤')
        btn_basketball = types.KeyboardButton('üèÄ–ë–∞—Å–∫–µ—Ç–±–æ–ªüèÄ')
        btn_football = types.KeyboardButton('‚öΩ–§—É—Ç–±–æ–ª‚öΩ')
        btn_bowling = types.KeyboardButton('üé≥–ë–æ—É–ª–∏–Ω–≥üé≥')
        btn_darts = types.KeyboardButton('üéØ–î–∞—Ä—Ç—ÅüéØ')
        btn_slot_machine = types.KeyboardButton('üé∞–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Çüé∞')
        btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')
        markup.add(btn_random_number, btn_random_word, btn_dice, btn_basketball, btn_football, btn_bowling,
                   btn_darts, btn_slot_machine, btn_back)
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ "–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ" –≤—ã–∫–ª—é—á–µ–Ω–∞ üôÉ', reply_markup=markup)


def random_word(message):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–≥—Ä—ã —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ
    '''
    global data
    if message.text == '‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí':  # —Å–æ–∑–¥–∞—ë–º –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn_choose = types.KeyboardButton('üóí–í—ã–±—Ä–∞—Ç—å —Å–ª–æ–≤–æüóí')
        btn_set_list_of_word = types.KeyboardButton('‚úè–ó–∞–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤üóÉ')
        btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')
        markup.add(btn_choose, btn_set_list_of_word, btn_back)
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ "–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ" üòù', reply_markup=markup)
        bot.send_message(message.chat.id, '–ó–∞–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üóí–í—ã–±—Ä–∞—Ç—å —Å–ª–æ–≤–æüóí", ' +
                         '–∏ —è –≤—ã–±–µ—Ä—É —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ üòú')
        if len(data[f'{message.chat.id}']['list_for_game_random_word']) != 0:
            words = data[f'{message.chat.id}']['list_for_game_random_word']
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å —É –≤–∞—Å —Ç–∞–∫–æ–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤: ' +
                             f'{", ".join(words)}')
    elif message.text == 'üóí–í—ã–±—Ä–∞—Ç—å —Å–ª–æ–≤–æüóí':  # –≤—ã–±–∏—Ä–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤
        data[f'{message.chat.id}']['game_function_check'] = ''
        if len(data[f'{message.chat.id}']['list_for_game_random_word']) != 0:
            words = data[f'{message.chat.id}']['list_for_game_random_word']
            bot.send_message(message.chat.id, f'{choice(words)}')

            upd = models.Userinf.update({models.Userinf.game: models.Userinf.game + 1}) \
                .where(models.Userinf.chat_id == message.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
            upd.execute()

            upd = models.Userinf.update({models.Userinf.random_word: models.Userinf.random_word + 1}) \
                .where(models.Userinf.chat_id == message.chat.id)  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∂–∏–º–∞ –≤ –±–¥
            upd.execute()
        else:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —è –≤—ã–±—Ä–∞–ª —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ, ' +
                             '–≤–∞–º —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ üòâ')
    elif message.text == '‚úè–ó–∞–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤üóÉ':  # –º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–≥—Ä—ã –Ω–∞ –Ω—É–∂–Ω—É—é
        data[f'{message.chat.id}']['game_function_check'] = '–°–ø–∏—Å–æ–∫ —Å–ª–æ–≤'
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –¥–ª—è –∑–∞–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤ üòÉ\n' +
                         '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ üìó')
        if len(data[f'{message.chat.id}']['list_for_game_random_word']) != 0:
            words = data[f'{message.chat.id}']['list_for_game_random_word']
            bot.send_message(message.chat.id, '–í–∞—à —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤: ' +
                             f'{", ".join(words)}')
    elif data[f'{message.chat.id}']['game_function_check'] == '–°–ø–∏—Å–æ–∫ —Å–ª–æ–≤' and message.text != '‚úè–ó–∞–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤üóÉ':
        if message.text != 'üîô–ù–∞–∑–∞–¥üîô':  # –∑–∞–¥–∞—ë–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
            try:
                data[f'{message.chat.id}']['list_for_game_random_word'] = [word for word in message.text.split()]
                bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∑–∞–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ')
            except BaseException:
                bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤ üôÅ')
    if message.text == 'üîô–ù–∞–∑–∞–¥üîô':  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä –∏ –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ —Ç–æ–º —á—Ç–æ –∏–≥—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞
        data[f'{message.chat.id}']['pod_mode'] = ''
        data[f'{message.chat.id}']['game_function_check'] = ''
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn_random_number = types.KeyboardButton('üî¢–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æüî¢')
        btn_random_word = types.KeyboardButton('‚úè–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æüóí')
        btn_dice = types.KeyboardButton('üé≤–ò–≥—Ä–æ–≤—ã–µ –∫–æ—Å—Ç–∏üé≤')
        btn_basketball = types.KeyboardButton('üèÄ–ë–∞—Å–∫–µ—Ç–±–æ–ªüèÄ')
        btn_football = types.KeyboardButton('‚öΩ–§—É—Ç–±–æ–ª‚öΩ')
        btn_bowling = types.KeyboardButton('üé≥–ë–æ—É–ª–∏–Ω–≥üé≥')
        btn_darts = types.KeyboardButton('üéØ–î–∞—Ä—Ç—ÅüéØ')
        btn_slot_machine = types.KeyboardButton('üé∞–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Çüé∞')
        btn_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥üîô')
        markup.add(btn_random_number, btn_random_word, btn_dice, btn_basketball, btn_football, btn_bowling,
                   btn_darts, btn_slot_machine, btn_back)
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ "–†–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ" –≤—ã–∫–ª—é—á–µ–Ω–∞ üôÉ', reply_markup=markup)


if __name__ == '__main__':
    bot.polling(none_stop=True, interval=True)